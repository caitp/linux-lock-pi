#!/usr/bin/env node
var LinuxLockService = function(config) {
  var LinuxLock = require('../lib'),
      self = this
  try {
    //
    // Load and normalize JSON configuration file.
    //
    this.config = LinuxLock.loadConfig(config)
    //
    // Construct service dependencies using instructions from the configuration
    // file.
    //
    this.gpio = new LinuxLock.GPIO()
    this.client = LinuxLock.createClient(this.config.client)
    this.client.on('authorized', function(details) {
      console.log(details.tag + ": authorized")
      if(this.config.gpio.authorized)
        this.gpio.execute(this.config.gpio.authorized)
    })
    this.client.on('unauthorized', function(details) {
      console.log(details.tag + ": unauthorized")
      if(this.config.gpio.unauthorized)
        this.gpio.execute(this.config.gpio.unauthorized)
    })
    this.rfidReader = new LinuxLock.RFIDReader(this.config.rfidReader, false)
    this.rfidReader.on('scanned', function(value) {
      self.client.checkRFID(value)
    })
  } catch(err) {
    //
    // If some error occurs, throw back to the caller.
    //
    throw err
  }
}

module.exports = exports = LinuxLockService

//
// Startup the application if we're the main script
//
if(!module.parent) {
  var service = new LinuxLockService('~/.linux-lock-service.json')
  service.rfidReader.enable()
}
